{
  "Serilog": {
    "Using": [
      "Serilog.Enrichers.Environment",
      "Serilog.Expressions",
      "Serilog.Sinks.Async",
      "Serilog.Sinks.Console",
      "Serilog.Sinks.Debug",
      "Serilog.Sinks.Seq"
    ],
    "MinimumLevel": {
      "Default": "Verbose",
      "Override": {
        "Microsoft": "Warning",
        "Microsoft.AspNetCore": "Warning",
        "Microsoft.Hosting.Lifetime": "Information",
        "Microsoft.EntityFrameworkCore": "Warning",
        "Microsoft.Extensions.Http.DefaultHttpClientFactory": "Warning",
        "System.Net.Http.HttpClient.Default.LogicalHandler": "Warning",
        "System.Net.Http.HttpClient.Default.ClientHandler": "Warning"
      }
    },
    "Enrich": [
      "WithEnvironmentName",
      "WithMachineName"
    ],
    "WriteTo:Async": {
      "Name": "Async",
      "Args": {
        "configure": [
          {
            "Name": "Console",
            "Args": {
              "outputTemplate": "{Timestamp:yyyy-MM-dd HH:mm:ss.fff} [{Level:u3}] {Message:lj}{NewLine}{Exception}",
              "restrictedToMinimumLevel": "Debug"
            }
          }
        ]
      }
    },
    "WriteTo:Seq": {
      "Name": "Seq",
      "Args": {
        "restrictedToMinimumLevel": "Information",
        "serverUrl": "", // Insert SEQ URL
        "apiKey": "" // RunChecker Dev API KEY
      }
    },
    "WriteTo:ConditionalDebug": {
      "Name": "Conditional",
      "Args": {
        "expression": "EnvironmentName = 'Development'",
        "configureSink": [
          {
            "Name": "Debug",
            "Args": {
              "outputTemplate": "{Timestamp:yyyy-MM-dd HH:mm:ss.fff} [{Level:u3}] {Message:lj}{NewLine}{Exception}",
              "restrictedToMinimumLevel": "Verbose"
            }
          }
        ]
      }
    }
  },
  "CertificateChecker": {
    "DaysRemainingToFlag": 28, // Days till expiration to warn
    "AlwaysCreateBacklog": false, // For testing
    "DefaultPriority": 3,
    "ExpiringPriority": 2,
    "ExpiredPriority": 1,
    "CheckCertificates": true
  },
  "Azure": {
    "URL": "https://dev.azure.com/", // Insert DevOps URL
    "AccessToken": "" // Azure DevOps Access Token
  },
  "ConnectionStrings": {
    "RunCheckerContext": "Server=SERVERNAME;Database=RUN;Trusted_Connection=True;TrustServerCertificate=True"
  },
  "EmailService": {
    "MailServer": "", // Insert mailserver
    "Sender": "RUNChecker@organization.com",
    "Recipients": [ // Who to send the email to
      "testemail@organization.com"
    ]
  },
  "ServiceAccountChecker": {
    "DaysRemainingToFlag": 28, // Days till expiration to warn
    "AlwaysCreateBacklog": false, // For testing
    "DefaultPriority": 3,
    "ExpiringPriority": 2,
    "ExpiredPriority": 1,
    "CheckServiceAccounts": true
  }
}